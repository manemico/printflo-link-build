{"version":3,"sources":["layout/Aside.js","pages/ConfigVars.jsx","pages/AppController.jsx","layout/Main.js","layout/Layout.js","messages.js","App.js","index.js"],"names":["Aside","React","memo","collapsed","toggled","handleToggleSidebar","handleCollapsedChange","pathname","useLocation","intl","useIntl","breakPoint","onToggle","style","padding","textTransform","fontWeight","fontSize","letterSpacing","overflow","textOverflow","whiteSpace","textAlign","iconShape","icon","active","includes","formatMessage","id","to","className","onClick","role","fetchConfigVars","Promise","resolve","reject","a","url","process","controller","AbortController","signal","fetch","method","response","cancel","abort","setTimeout","json","console","log","updateConfigVar","config","headers","body","JSON","stringify","ConfigVars","useQuery","isLoading","isError","error","data","queryClient","useQueryClient","useState","modalIsOpen","setIsOpen","setConfig","configValRef","useRef","mutation","useMutation","onMutate","variables","cancelQueries","previousConfigvars","getQueryData","setQueryData","old","key","value","onSuccess","onError","context","onSettled","invalidateQueries","count","height","circle","Object","keys","map","i","editConfig","isOpen","onAfterOpen","current","focus","onRequestClose","overlayClassName","contentLabel","closeTimeoutMS","parentSelector","document","querySelector","onSubmit","e","preventDefault","mutate","handleSubmit","minWidth","htmlFor","type","disabled","ref","onChange","target","handleChangeValue","Modal","setAppElement","socket","socketIOClient","AppController","msg","setMsg","loading","setLoading","onAppControllerResult","useCallback","on","cmd","useEffect","removeListener","emit","QueryClient","Main","QueryClientProvider","client","exact","component","path","Layout","setLocale","setCollapsed","setToggled","en","title","sidebarTitle","description","dashboard","configVars","appController","new","App","locale","messages","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b6dc734.chunk.js","sourcesContent":["import { useIntl } from 'react-intl';\r\nimport {\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SidebarHeader,\r\n  SidebarFooter,\r\n  SidebarContent,\r\n} from 'react-pro-sidebar';\r\nimport { FaTachometerAlt, FaGem, FaArrowLeft, FaArrowRight, FaPrint, FaGamepad } from 'react-icons/fa';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport React from 'react';\r\n// import sidebarBg from './assets/bg1.jpg';\r\n\r\nconst Aside = React.memo(({\r\n  collapsed,\r\n  toggled,\r\n  handleToggleSidebar,\r\n  handleCollapsedChange,\r\n}) => {\r\n  const { pathname } = useLocation();\r\n  // console.log(\"pathname: \", pathname);\r\n  const intl = useIntl();\r\n  return (\r\n    <ProSidebar\r\n      collapsed={collapsed}\r\n      toggled={toggled}\r\n      breakPoint=\"md\"\r\n      onToggle={handleToggleSidebar}\r\n    >\r\n      <SidebarHeader>\r\n        <div\r\n          style={{\r\n            padding: \"24px\",\r\n            textTransform: \"uppercase\",\r\n            fontWeight: 400,\r\n            fontSize: \"20px\",\r\n            letterSpacing: \"2px\",\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <FaPrint />\r\n          {/* {!collapsed && (\r\n            <span style={{ display: \"inline-block\", marginLeft: \"10px\" }}>\r\n              {intl.formatMessage({ id: \"sidebarTitle\" })}\r\n            </span>\r\n          )} */}\r\n        </div>\r\n      </SidebarHeader>\r\n\r\n      <SidebarContent>\r\n        <Menu iconShape=\"circle\">\r\n          <MenuItem icon={<FaGem />} active={pathname.includes(\"/\")}>\r\n            {intl.formatMessage({ id: \"configVars\" })}\r\n            {/* <Link to=\"/config-vars\" /> */}\r\n            <Link to=\"/\" />\r\n          </MenuItem>\r\n          {/* <MenuItem icon={<FaGamepad />} active={pathname.includes(\"control\")}>\r\n            {intl.formatMessage({ id: \"appController\" })}\r\n            <Link to=\"/app-controller\" />\r\n          </MenuItem> */}\r\n        </Menu>\r\n      </SidebarContent>\r\n\r\n      <SidebarFooter style={{ textAlign: \"center\" }}>\r\n        <div\r\n          className=\"sidebar-btn-wrapper\"\r\n          style={{\r\n            padding: \"20px 24px\",\r\n          }}\r\n        >\r\n          <span\r\n            className=\"sidebar-btn\"\r\n            onClick={() => handleCollapsedChange(collapsed)}\r\n            role=\"button\"\r\n          >\r\n            {collapsed ? <FaArrowRight /> : <FaArrowLeft />}\r\n          </span>\r\n        </div>\r\n      </SidebarFooter>\r\n    </ProSidebar>\r\n  );\r\n});\r\n\r\nexport default Aside;","import { useRef } from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { useMutation, useQuery,  useQueryClient } from \"react-query\";\r\nimport Modal from \"react-modal\";\r\nimport { useState } from \"react\";\r\nimport { FaEdit, FaSave, FaUndo } from \"react-icons/fa\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction fetchConfigVars() {\r\n  return new Promise(async (resolve, reject) => {\r\n    const url = `${process.env.REACT_APP_API_ENDPOINT}/config-vars`;\r\n    const controller = new AbortController()\r\n    const signal = controller.signal\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"get\",\r\n        signal\r\n      });\r\n\r\n      response.cancel = () => controller.abort();\r\n\r\n      setTimeout(() => {\r\n        resolve(response.json());\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.log(\"fetchConfigVars error\", error);\r\n      reject(error);\r\n    }\r\n  })\r\n}\r\n\r\nfunction updateConfigVar(config) {\r\n  return new Promise(async (resolve, reject) => {\r\n    const url = `${process.env.REACT_APP_API_ENDPOINT}/config-vars/update`;\r\n    const controller = new AbortController();\r\n    const signal = controller.signal\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"post\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(config),\r\n        signal\r\n      });\r\n\r\n      response.cancel = () => controller.abort();\r\n\r\n      setTimeout(() => {\r\n        resolve(response.json());\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.log(\"fetchConfigVars error\", error);\r\n      reject(error);\r\n    }\r\n\r\n  })\r\n}\r\n\r\nexport default function ConfigVars() {\r\n  // console.log(\"** ConfigVars fn init\")\r\n  const { isLoading, isError, error, data } = useQuery(\"configVars\", fetchConfigVars);\r\n  const queryClient = useQueryClient();\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [config, setConfig] = useState(\"\");\r\n  const configValRef = useRef();\r\n\r\n  const mutation = useMutation(async config => {\r\n    console.log('config in useMutation', config)\r\n    return await updateConfigVar(config);\r\n  }, {\r\n    onMutate: variables => {\r\n      console.log(\"> onMutate init\");\r\n      queryClient.cancelQueries(\"configVars\");\r\n      \r\n      const previousConfigvars = queryClient.getQueryData(\"configVars\");\r\n      \r\n      queryClient.setQueryData(\"configVars\", old => {\r\n        let { key, value } = variables;\r\n        console.log(\"old configVars\", old);\r\n        return { ...old, [key]:value }\r\n      });\r\n\r\n      return { previousConfigvars }\r\n    },\r\n    onSuccess: (data) => {\r\n      console.log(\"> onSuccess init\");\r\n      console.log(\"data: \", data);\r\n    },\r\n    onError: (error, variables, context) => {\r\n      console.log(\"> onError init\");\r\n      console.log(\"onError::error: \", error);\r\n      console.log(\"onError::context: \", context);\r\n      queryClient.setQueryData(context.previousConfigvars);\r\n    },\r\n    onSettled: () => {\r\n      queryClient.invalidateQueries(\"configVars\");\r\n    }\r\n  });\r\n\r\n  function afterOpenModal() {\r\n    console.log(\">> modal opened\");\r\n    configValRef.current.focus();\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  function editConfig({key, value}) {\r\n    // console.log(\"key\", key);\r\n    // console.log(\"value\", value);\r\n    setIsOpen(true);\r\n    setConfig(() => ({ key, value }));\r\n  }\r\n\r\n  function handleChangeValue(e) {\r\n    e.preventDefault();\r\n    // console.log(\"key\", config.key);\r\n    // console.log(\"value\", e.target.value);\r\n    setConfig({ key: config.key, value: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // console.log(\"config\", config);\r\n    mutation.mutate(config);\r\n    setIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-title\">\r\n        <h1>Config Vars</h1>\r\n        <p className=\"page-description\">Config vars change the way your app behaves.</p>\r\n      </div>\r\n      <section>\r\n        {\r\n          isLoading\r\n            ? <Skeleton count={10} height={50} circle={true}/>\r\n            : isError\r\n              ? <div className=\"warn\">\r\n                <pre>{JSON.stringify(error, null, 2)}</pre>\r\n              </div>\r\n              : (\r\n                <>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Key</th>\r\n                      <th>Value</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                      {/* {configVars && Object.keys(configVars).map((key, i) => { */}\r\n                      {Object.keys(data).map((key, i) => {\r\n                      return (\r\n                        <tr key={i}>\r\n                          <td>{key}</td>\r\n                          <td>{data[key]}</td>\r\n                          <td style={{ textAlign: \"center\" }}>\r\n                            <button onClick={() => editConfig({ key, value: data[key] })}><FaEdit /></button>\r\n                          </td>\r\n                        </tr>\r\n                      )\r\n                    })\r\n\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n                </>\r\n              )\r\n        }\r\n      </section>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        className=\"modal-content\"\r\n        overlayClassName=\"modal-overlay\"\r\n        contentLabel=\"Edit Config Var Modal\"\r\n        closeTimeoutMS={500}\r\n        parentSelector={() => document.querySelector(\"main\")}\r\n      >\r\n        <form onSubmit={(e) => handleSubmit(e)} style={{minWidth: \"300px\"}}>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"key\">Key</label>\r\n            <input type=\"text\" id=\"key\" value={config.key} disabled={true} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"Value\">Value</label>\r\n            <input type=\"text\" id=\"value\" value={config.value} ref={configValRef} onChange={ (e) => handleChangeValue(e) }/>\r\n          </div>\r\n          <div className=\"buttons-wrapper\">\r\n            <button type=\"submit\"><FaSave /> Submit</button>\r\n            <button onClick={(e) => { e.preventDefault(); setIsOpen(false); }}><FaUndo /> Cancel</button>\r\n          </div>\r\n          \r\n        </form>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","import React, {useEffect, useCallback, useState} from 'react';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { FaInfoCircle, FaRedo } from 'react-icons/fa';\r\nimport \"../styles/page-app-controller.scss\";\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nconst socket = socketIOClient(process.env.REACT_APP_SOCKET_ENDPOINT);\r\n\r\nexport default function AppController() {\r\n  const [msg, setMsg] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onAppControllerResult = useCallback(() => {\r\n    socket.on(\"on-app-contrller-result\", (msg, cmd) => {\r\n      console.log(\"on-app-contrller-result msg, cmd \", msg, cmd);\r\n      if (!msg && cmd.includes(\"restart\")) msg = \"Successfully restarted.\";\r\n      setMsg(msg);\r\n      setLoading(false);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    onAppControllerResult();\r\n\r\n    return () => {\r\n      socket.removeListener(\"on-app-contrller-result\")\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n\r\n  function execAppController(cmd) {\r\n    console.log(\"> execAppController init\");\r\n    setLoading(true);\r\n    msg && setMsg(null);\r\n    socket.emit(\"on-app-controller\", cmd);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 5000);\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"page-app-controller\">\r\n      <div className=\"page-title\">\r\n        <h1>App Controller</h1>\r\n      </div>\r\n      <section>\r\n        {loading && <Skeleton />}\r\n        {msg && \r\n          <div className=\"card warn\">\r\n            <span className=\"inline-block\"><FaInfoCircle /></span>\r\n            <span className=\"inline-block\">{msg}</span>\r\n          </div>\r\n        }\r\n        \r\n        <div className=\"block\">\r\n          <div className=\"card\">\r\n            <button className=\"action-text\" onClick={() => execAppController(\"pm2 restart local\")}>\r\n              <span className=\"inline-block\"><FaRedo /></span>\r\n              <span className=\"inline-block\">Restart the app</span>\r\n            </button>\r\n            \r\n          </div>\r\n        \r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport { QueryClientProvider, QueryClient } from \"react-query\";\r\n// import Dashboard from \"pages/Dashboard\";\r\nimport ConfigVars from \"pages/ConfigVars\";\r\nimport AppController from \"pages/AppController\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main>\r\n      <QueryClientProvider client={queryClient}>\r\n        <Switch>\r\n          {/* <Route exact component={Dashboard} path=\"/dashboard\" /> */}\r\n          {/* <Route exact component={ConfigVars} path=\"/config-vars\" /> */}\r\n          <Route exact component={ConfigVars} path=\"/\" />\r\n          <Route exact component={AppController} path=\"/app-controller\" />\r\n        </Switch>\r\n      </QueryClientProvider>\r\n      <footer>\r\n        <small>© 2021 Printingify</small>\r\n        {/* <small>© 2021 Printingify, powered by Chang Han</small> */}\r\n      </footer>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { useState } from 'react';\r\nimport Aside from './Aside';\r\nimport Main from './Main';\r\n\r\nfunction Layout({ setLocale }) {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [toggled, setToggled] = useState(false);\r\n\r\n  const handleCollapsedChange = (value) => {\r\n    setCollapsed(() => value = !value);\r\n  };\r\n\r\n  const handleToggleSidebar = (value) => {\r\n    console.log(\"handleToggleSidebar value\", value);\r\n    setToggled(value);\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${toggled ? \"toggled\" : \"\"}`}>\r\n      <Aside\r\n        collapsed={collapsed}\r\n        toggled={toggled}\r\n        handleToggleSidebar={handleToggleSidebar}\r\n        handleCollapsedChange={handleCollapsedChange}\r\n      />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;","/* eslint-disable import/no-anonymous-default-export */\r\nexport default {\r\n  en: {\r\n    title: \"Printingify\",\r\n    sidebarTitle: \"Printingify\",\r\n    description:\r\n      \"All about Printing\",\r\n    dashboard: \"Dashboard\",\r\n    configVars: \"Config Vars\",\r\n    appController: \"App Controller\",\r\n    new: \"New\"\r\n  },\r\n};","import { useState } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { IntlProvider } from 'react-intl';\r\nimport Layout from './layout/Layout';\r\nimport messages from './messages';\r\nimport './styles/app.scss';\r\n\r\nfunction App() {\r\n  const [locale, setLocale] = useState('en');\r\n\r\n  return (\r\n    <IntlProvider locale={locale} messages={messages[locale]}>\r\n      <BrowserRouter>\r\n        <Layout setLocale={setLocale} />\r\n      </BrowserRouter>\r\n    </IntlProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}