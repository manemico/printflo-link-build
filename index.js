(()=>{var e={6528:(e,t,o)=>{const i=o(5619);let r,{CLUST_NAME:n,M_NAME:s}=process.env;r=n.includes("printflo")?`mongodb+srv://vincenzo:sjnRJxpWqFwyOCif@${n}.azqgc.mongodb.net/${s}?retryWrites=true&w=majority`:`mongodb+srv://super:8cecBtTBAmfqslbY@printingifycluster.atw5r.mongodb.net/${s}?retryWrites=true&w=majority`,i.connect(r,{useNewUrlParser:!0,useUnifiedTopology:!0,useCreateIndex:!0,useFindAndModify:!1});const a=i.connection;a.on("error",(e=>{console.error("> Error occurred from the mongo db",{message:e})})),a.once("open",(()=>{console.log("> Successfully opened the mongo db")})),e.exports={mongoose:i,dbPath:r,db:a}},3157:(e,t,o)=>{const{serializeError:i}=o(477),{exec:r}=o(3129),{promisify:n}=o(1669),s=n(r),a=o(2927).toString();t.execAppController=e=>new Promise((async(t,o)=>{try{console.log("- cmd: ",{message:e}),t(await s(e,{cwd:a,windowsHide:!0}))}catch(e){console.error("execAppController error: ",{message:i(e)}),o(i(e))}}))},2962:(e,t,o)=>{const i=o(5747).promises,r=o(5622),{parse:n,stringify:s}=(o(2087),o(1877)),a=o(2927).toString(),{APP_ENV:c}=process.env;async function l(){let e=r.resolve(a,"PRODUCTION"===c?".env":".env.staging");try{let t=await i.readFile(e,"utf-8");return n(t)}catch(e){console.error("read env error: ",e)}}t.getConfigVars=async(e,t)=>{let o=await l();t.send(o)},t.updateConfigVars=async(e,t)=>{let{key:o,value:n}=e.body;console.log("- updateConfigVars key, value: ",{message:o,value:n});let d=await l();d[o]=n;try{let e=r.resolve(a,"PRODUCTION"===c?".env":".env.staging");await i.writeFile(e,s(d)),t.send(d)}catch(e){console.error("write env file error: ",{message:e}),t.status("403").send(e)}}},2633:(e,t,o)=>{const{serializeError:i}=o(477),{exec:r}=o(3129),{promisify:n}=o(1669),{dbPath:s}=o(6528),a=n(r),c=o(2470),l=o(5622),d=o(2927);t.exportGraphics=()=>new Promise((async(e,t)=>{try{let t=["sku","imageUrl","graphicFileName","graphicPosition","ripEnv","platen","size.width","size.height"];const o=l.join(d.path,"\\utilities\\temp"),i="\\utilities\\mongodb-database-tools\\bin";let r=l.resolve(o,`graphics_${c().format("YYYYMMDDHHmm")}.csv`),n=l.join(d.path,i),p=`mongoexport.exe --uri "${s}" --collection graphics --type=csv --fields ${t.join(",")} --out ${r}`;e({result:await a(p,{cwd:n,windowsHide:!0}),filePath:r})}catch(e){console.error("exportGraphics error: ",{message:i(e)}),t(i(e))}}))},8755:(e,t,o)=>{const{serializeError:i}=o(477),{exec:r}=o(3129),{promisify:n}=o(1669),{dbPath:s}=o(6528),{getSettingQuery:a}=o(1038),c=n(r),l=o(2470),d=o(5622),p=o(2927);t.exportItems=()=>new Promise((async(e,t)=>{try{const t=await a();let{usePretreatmentBarcode:o}=t,i=["sku","description","category","color","size","childSKUs","component","graphicPosition","ripEnv","dimensionalUnit","type","imageUrl"];o&&i.push("pretreatmentBarcode");const r=d.join(p.path,"\\utilities\\temp"),n="\\utilities\\mongodb-database-tools\\bin";let u=d.resolve(r,`items_${l().format("YYYYMMDDHHmm")}.csv`),g=d.join(p.path,n),m=`mongoexport.exe --uri "${s}" --collection items --type=csv --fields ${i.join(",")} --out ${u}`;e({result:await c(m,{cwd:g,windowsHide:!0}),filePath:u})}catch(e){console.error("exportItems error: ",{message:i(e)}),t(i(e))}}))},5782:(e,t,o)=>{const i=o(5747).promises,r=o(5622),n=o(2927).toString(),{GTX_PRESETS:s}=process.env;t.getGTXPreset=async e=>{console.log("** getGTXPreset init"),console.log("- ripEnv",{message:e});const t=r.join(n,s);let o=await i.readFile(t),a=JSON.parse(o.toString("utf-8")),c=a.presets[process.env.GTX_MODEL]||a.presets.gtxpro,l=new RegExp("^"+e,"gi"),d=c.find((e=>l.test(e.name)));return d||(d=c.find((e=>e.name.includes("All")))),d||"All Color"}},9502:(e,t,o)=>{const i=o(576),r=(o(3206),o(5858),o(3804)),{getGraphicDimensions:n,s3GetObject:s}=o(3624),{getSettingQuery:a}=o(1038),{serializeError:c}=o(477);let l={nozzle:"1111",sprayStart:"00",sprayEnd:"",speed:"",unit:"1",doubleSpray:"1",table:"0"};const d=(e,t,o)=>(console.log("* generatePMTHandler init"),new Promise((async(i,n)=>{let s=e?._component?.color?e._component.color:e?.color?e.color:e.sku.substring(0,e.sku.indexOf("-"));console.log("- color: ",{message:s});const a=e?._graphics[0],{graphicFileName:c,platen:l}=a;console.log("- graphicFileName: ",{message:c}),console.log("- platen: ",{message:l});let d=r.find(t,(e=>new RegExp(s,"i").test(e.color)&&e));const u=d?.speed?d.speed:110;console.log("- speed: ",{message:u});try{let e=await p({graphicFileName:c,platen:l,speed:u,aws:o});console.log("- result: ",{message:e}),e&&i(e)}catch(e){n(e)}}))),p=({graphicFileName:e,platen:t,speed:o,aws:i})=>new Promise((async(r,n)=>{try{let{height:n,width:s,message:a}=await u({graphicFileName:e,platen:t,aws:i});if(console.log("- height: ",{message:n}),!n&&a)return void r(a);const c=40,d=9;let p=n+3>c?c:n+3,g=p<10?"0"+p:""+p;l.sprayEnd=g,l.speed=""+o,console.log(`- width(${s}) < criteriaInchW(${d}):  ${s<d}`),l.nozzle=s<d?"0110":"1111",r({pretreatmentBarcode:Object.values(l).join("")})}catch(e){n(e)}})),u=({graphicFileName:e,platen:t,aws:o})=>(console.log("* getGraphicSize init"),new Promise((async(i,r)=>{let a=`${o?.graphics?o.graphics:"graphics"}/${e}`;console.log("- key: ",{message:a});let c,l,d=o?.bucket?o.bucket:"printflo";try{c=await s({bucket:d,key:a,aws:o})}catch(e){return void r(e)}try{if(l=await n(c),console.log("- dimensions: ",{message:l}),!l)return void r({message:"file not exists"});{const e=await function(e,t){console.log("* getSizeInch init"),console.log("- platenArr: ",{message:e}),console.log("- arg(dimensions) in getSizeInch: ",{message:t});const o=process.env.DEFAULT_DPI||150,i={sizeW:Math.ceil(1*e[0]),sizeH:Math.ceil(1*e[1])};return new Promise((async e=>{let r,n;t&&(r=g(t.width,o),n=g(t.height,o),console.log(`- size by dimensions: w:${r}, h: ${n}`),r&&n&&(r>i.sizeW&&(n*=i.sizeW/r,r=i.sizeW),n>i.sizeH&&(r*=i.sizeH/n,n=i.sizeH),e({width:parseFloat(r),height:parseFloat(n)})))}))}(t.split("x"),l);console.log("- sizeInchresult: ",{message:e});let{height:o,width:r}=e;console.log("- h: "+o),console.log("- width: "+r);const n=2.54;let s=Math.round(o*n);console.log("- roundedH: ",{message:s}),i({height:s,width:r})}}catch(e){return console.error("- getGraphicDimensions error ",e),void r(e)}})));function g(e,t){return(e/t).toFixed(2)}e.exports={main:()=>(console.log("* main function init"),new Promise((async(e,t)=>{try{const t=await a(),{aws:o}=t,{speedColor:r}=t.pretreatmentConfigures,n=await async function(){console.log("* fetchMissingPMT init");try{const e=await i.find({type:"production",$or:[{pretreatmentBarcode:{$exists:!0,$eq:null}},{pretreatmentBarcode:{$exists:!0,$eq:""}},{pretreatmentBarcode:{$exists:!1}}],_graphics:{$exists:!0,$ne:[]}}).populate("_component","color").populate("_graphics");return Promise.resolve(e)}catch(e){console.error("- fetchMissingPMT error: ",e)}}(),s=await function(e,t,o){return console.log("* loopItem init"),new Promise((r=>{let n=0,s=e.length;async function a(){console.log(`- ${n+1}/${s}`);let l=e[n];console.log("- doc.sku: ",{message:l.sku});try{let e=await d(l,t,o);console.log("> pmtResult: ",{message:e});const{pretreatmentBarcode:r}=e;if(console.log("- pretreatmentBarcode: "+r),r){const e=await i.updateOne({_id:l._id},{$set:{pretreatmentBarcode:r}});console.log("- updateResult: ",{message:e?.nModified})}}catch(e){e?.message&&console.error("- generatePMTHandler error: ",{message:c(e)})}n+=1,n<s?a():(console.log("- end of doc in loop"),r(!0))}n<s&&a()}))}(n,r,o);console.log("- result: ",{message:s}),e({result:{message:"Completed"}})}catch(e){console.error("- main(pretreatmentGenerator) error: ",e),t(e)}}))),generatePMTHandler:d}},7798:(e,t,o)=>{const i=o(6790),{serializeError:r}=o(477);t.printDirect=(e,t,o="RAW",n)=>{i.printDirect({data:e,printer:t,type:o,success:()=>{n&&n({message:"Label printed successfully"})},error:e=>{n(r(e))}})}},3765:(e,t,o)=>{const{s3GetObject:i,saveBuffer:r,saveXML:n,s3HeadObject:s,s3Upload:a,getFilesUnlink:c,updatePackingItemPrinted:l}=o(3624),{serializeError:d}=o(477),{exec:p}=o(3129),{promisify:u}=o(1669),{getSettingQuery:g}=o(1038),m=u(p),h=o(5747),f=o(3804),y=o(4687),w=o(2927).toString();async function b(e,t,o,i,r,s,p,u,g,w,b){try{const{ARX_BUCKET:S,ARX_FOLDER:A}=process.env;if(p)try{const t=await v(o,g);console.log("- execGTXCmdArxResult",{message:t});let i=JSON.parse(t);console.log("- resultJson",{message:i});let r={},n=f.find(y,{code:i?.message});if(f.isNil(n)&&(n="Unknown issue"),r.message=n,0===i?.message&&u){const{_id:e,graphicPosition:t,hostname:o,username:i,printedQty:n}=u;await l({condition:{_id:e,"printed.position":t},update:{$set:{"printed.$.qty":n,"printed.$.hostname":o,"printed.$.username":i,printedAt:new Date}}}).then((e=>{console.log("- result(updatePrinted): ",{message:e}),r.printed=e}))}e.emit("on-queue-gtx-result",r),0===i?.message&&await c({sku:void 0,filePath:g+"\\input"})}catch(t){console.error("execGTXCmdArxResult error",{message:t}),e.emit("on-queue-gtx-result",{message:{code:null,description:d(t).message}})}else{const p=`${g}\\input\\${t}`,P=await n(i,p);if(console.log(" - saveXMLResult: ",{message:P.status}),P)try{const i=await function(e,t,o,i,r){return new Promise((async(n,s)=>{try{console.log("* execGTXCmd init");const a=1;let{GTX_PRINTER_NAME:c}=process.env;const l=o.width+o.height;console.log("- imageSize",{message:l});const d=`print.bat "${c}" "${r}\\input\\${t}" "${e}" ${l} ${a} "${r}\\input\\${i}"`;console.log("- cmd: ",{message:d});let p=await m(d,{cwd:r,windowsHide:!0});if(console.log("- execPromise result",{message:p}),Boolean(p.stderr.length))return void s(p.stderr);n(p.stdout.replace("\r\n",""))}catch(e){s(d(e))}}))}(r,t,s,o,g);let n=JSON.parse(i);console.log("** resultJson",{message:n});let p=f.find(y,{code:n?.message});console.log("- retVal: ",{message:p}),f.isNil(p)&&(p="Unknown issue");let P={};if(P.message=p,0===n?.message){const t=await v(o,g);let i=JSON.parse(t);if(console.log("** resultArx",{message:i}),p=f.find(y,{code:i?.message}),P.message=p,0===i?.message&&u){const{_id:e,graphicPosition:t,hostname:o,username:i,printedQty:r}=u;await l({condition:{_id:e,"printed.position":t},update:{$set:{"printed.$.qty":r,"printed.$.hostname":o,"printed.$.username":i,printedAt:new Date}}}).then((e=>{console.log("- result(updatePrinted): ",{message:e}),P.printed=e}))}if(e.emit("on-queue-gtx-result",P),0===i?.message){if(b)h.copyFileSync(`${g}\\input\\${o}`,`${w}\\${o}`);else{const e=await a({bucket:S,filePath:`${g}\\input\\${o}`,key:`${A}/${o}`});console.log("- uploadResult: ",{message:e?.Location})}await c({sku:void 0,filePath:g+"\\input"})}}else e.emit("on-queue-gtx-result",P)}catch(t){console.error("execGTXCmdResult error",t),e.emit("on-queue-gtx-result",{message:{code:null,description:t?.message}})}}}catch(t){return console.error("on-queue-gtx error",t),void e.emit("on-queue-gtx-result",{message:{code:null,description:d(t).message}})}}function v(e,t){return new Promise((async(o,i)=>{try{console.log("- execGTXCmdArx init");let{GTX_PRINTER_NAME:r}=process.env;const n=`print_arx.bat "${r}" "${t}\\input\\${e}"`;console.log("  - cmd: ",{message:n});let s=await m(n,{cwd:t,windowsHide:!0});if(console.log("- execPromise result",{message:s}),Boolean(s.stderr.length))return void i(s.stderr);o(s.stdout.replace("\r\n",""))}catch(e){i(d(e))}}))}t.queueGTX=async(e,t,n,a,c)=>{console.log("* on-queue-gtx init"),console.log("- print_size",{message:t}),console.log("- updatePrinted",{message:c});const{useLocalRepository:l,aws:p,graphicFilePath:u}=await g();let{ARX_BUCKET:m,ARX_FOLDER:f,GTX_PRINTER_NAME:y,GTX_CMD_PATH:v}=process.env;const{sku:S,graphicPosition:A,graphicFileName:P}=a;let x;v=o(5622).join(w,v);const $=`${S}-${A}`,T=$+".xml";let k="arx4";/pro/i.test(y)&&(k="arxp");const I=`${$}.${k}`;let O,B;console.log("- arxName: ",{message:I});let U=!0;if(l){console.log(`- useLocalRepository: ${l}, graphicFilePath: ${u}`);const o=`${u}\\${P}`,i=`${u}\\${I}`;let r=`${v}\\input\\${P}`;console.log("-arxSrc: ",i);try{await h.promises.access(i,h.constants.F_OK)}catch(e){console.log(e),U=!1}console.log("-isArx: ",U),U?(r=`${v}\\input\\${I}`,h.copyFileSync(i,r)):h.copyFileSync(o,r),b(e,T,I,n,r,t,U,c,v,u,l)}else{try{B=m,O=`${f}/${I}`;let e=await s(B,O,p);console.log("- s3HeadObject result: ",{message:e}),U=e}catch(e){console.error("- s3HeadObject error: ",{message:e?.code}),U=!1}try{U||(B=p.bucket,O=`${p.graphics}/${P}`),x=await i({bucket:B,key:O,aws:p})}catch(t){return console.error("- s3GetObject error",d(t)),void e.emit("on-queue-gtx-result",d(t).message)}if(!x)return void e.emit("on-queue-gtx-result",{message:{code:null,description:"Buff undefined"}});if(!v)return void e.emit("on-queue-gtx-result",{message:{code:null,description:"GTX command line path not defined"}});{let o=`${v}\\input\\${U?I:P}`;const i=await r(x,o);if(console.log("- saveBuffer(graphic) graphicPath:",{message:i}),!i)return void e.emit("on-queue-gtx-result",{message:{code:null,description:"Failed to saving a garaphic file"}});b(e,T,I,n,i,t,U,c,v)}}}},9510:(e,t,o)=>{const{serializeError:i}=o(477),{getSettingQuery:r}=o(1038),{s3GetObject:n,saveBuffer:s,saveXML:a,updatePackingItemPrinted:c}=o(3624);t.queueKothari=async(e,t,o,l,d,p)=>{console.log("* queueKothari init");const u=await r(),g=u.useLocalRepository??u.useLocalRepository,m=u.graphicFilePath??u.graphicFilePath,h=u.aws??u.aws;g&&console.log(`- useLocalRepository: ${g}, graphicFilePath: ${m}`),console.log("- printQty: ",{message:d}),console.log("- updatePrinted: ",{message:JSON.stringify(p)});const{graphicPosition:f,graphicFileName:y}=l;let w,b,{PUBLIC_PATH:v,HOT_PATH:S}=process.env,A=h?.bucket?h.bucket:"printflo";if(g){if(!m)return void e.emit("on-queue-kothari-result","Graphic file path not found");b=`${m}/${y}`}else{try{let e=`${h.graphics}/${y}`;w=await n({bucket:A,key:e,aws:h}),console.log("- done grahpics buff")}catch(t){return console.error("- s3GetObject error",{message:t}),void e.emit("on-queue-kothari-result",t)}if(w){let e=`${v}/${y}`;b=await s(w,e),console.log("- saveBuffer(graphic) result",{message:b})}}if(b)try{let i=parseInt(d);if(i>1)for(let r=1;r<=i;r++){let n=`${S}/${o}-${f}_${r}.xml`;const s=await a(t,n);console.log("- saveXMLResult",{message:s}),r===i&&s&&e.emit("on-queue-kothari-result",{message:"Successfully queued"})}else{let i=`${S}/${o}-${f}.xml`;const r=await a(t,i);if(console.log("- saveXMLResult",{message:r}),r){let t={message:"Successfully queued"};if(p){const{_id:e,graphicPosition:o,hostname:i,username:r,printedQty:n}=p;await c({condition:{_id:e,"printed.position":o},update:{$set:{"printed.$.qty":n,"printed.$.hostname":i,"printed.$.username":r,printedAt:new Date}}}).then((e=>{console.log("- result(updatePrinted): ",{message:JSON.stringify(e)}),t.printed=e}))}e.emit("on-queue-kothari-result",t)}}}catch(t){return console.error(" - saveXMLResult error",{message:t}),void e.emit("on-queue-kothari-result",i(t))}else e.emit("on-queue-kothari-result",{message:"Failed saving a garaphic file"})}},8166:(e,t,o)=>{const{saveBuffer:i,s3GetObject:r,removeFile:n}=o(3624),{exec:s}=o(3129),{promisify:a}=o(1669),c=a(s),l=o(5622),{serializeError:d}=o(477),{getSettingQuery:p}=o(1038),u=o(2927).toString(),{SUMATRA_PATH:g,SHEET_PRINTER:m,TEMP_PATH:h}=process.env;t.shippingLabelPrint=async(e,t,o)=>{let s,a,f,y,w;console.log("* on-shipping-label-print"),console.log("- filename",{message:t}),console.log("- APP_ROOT_PATH",{message:{APP_ROOT_PATH:u,typeof:typeof u}}),console.log("- TEMP_PATH",{message:h});try{const e=await p();s=e?.useLocalRepository,a=e?.shipmentLabelPath,f=e?.aws}catch(t){return console.log("- getSettingQuery error",{message:d(t)}),void e.emit("on-printed-shipping-label",{message:"Error ocurred on printing label: "+d(t).message})}let b=f?.bucket?f.bucket:"printflo";if(s)w=Buffer.from(o,"base64");else{let o=`${f.shipLabel}/${t}`;try{w=await r({bucket:b,key:o,aws:f})}catch(t){return console.error("- s3GetObject error",{message:d(t)}),void e.emit("on-printed-shipping-label",{message:"Error ocurred on printing label: "+d(t).message})}}try{const o=l.join(u,h);console.log("-tempPath",{message:o});let r=`${s?a:o}/${t}`;console.log("-tempFilePath",{message:r}),y=await i(w,r),console.log("- saveBuffer filePath(label pdf):",{message:y});let p=`SumatraPDF -print-to "${m}" "${r}"`;const f=l.join(u,g);await c(p,{cwd:f,windowsHide:!0}).then((t=>{console.log("- execPromise sumatraPDF print result",{message:t}),console.log("- ptp.print success msg emit"),e.emit("on-printed-shipping-label",{message:"Printing a label..."})})).catch((t=>{let o=d(t);e.emit("on-printed-shipping-label",{message:"Error ocurred on printing label: "+(o?.message&&o.message)})})).finally((()=>{s||n(y).catch((t=>{e.emit("on-printed-shipping-label",{message:"Error ocurred on printing label: "+d(t)})}))}))}catch(t){console.error("- on-printed-shipping-label error",{message:t}),e.emit("on-printed-shipping-label",{message:"Error ocurred on printing label: "+t})}}},3046:(e,t,o)=>{const i=o(4226),{serializeError:r}=o(477),n=o(2589),s=o(5747).promises;o(1815);t.watchDone=e=>{try{console.log("* watching done folder init"),i(process.env.DONE_PATH,{filter:/\.xml$/},(async(t,o)=>{console.log("- event",{message:t}),"update"===t&&(console.log("- file",{message:o}),await s.readFile(o,{encoding:"utf-8"}).then((t=>{n.parseStringPromise(t,{explicitArray:!1}).then((t=>{e.emit("on-watch-done",t)}))}))),console.log(`** ${o} was ${t}`)}))}catch(e){console.error("watch done error: \r\n",{message:r(e)})}}},2007:(e,t,o)=>{const{mongoose:i}=o(6528),{Schema:r}=o(5619),n=new r({binCode:{type:String,unique:!0,required:!0},description:String,isActive:{type:Boolean,default:!1},loadCapacity:{type:Number,default:5},modifiedAt:{type:Date,default:Date.now},priority:{type:Number}}),s=i.Schema(n),a=i.model("bin",s);e.exports=a},3206:(e,t,o)=>{const{mongoose:i}=o(6528),{Schema:r}=o(5619),n=new r({sku:String,imageUrl:String,graphicFileName:String,graphicPosition:String,platen:String,size:{width:Number,height:Number}}),s=i.Schema(n),a=i.model("graphic",s);e.exports=a},576:(e,t,o)=>{const{mongoose:i}=o(6528),{Schema:r}=o(5619),n=new r({sku:{type:String,unique:!0},category:{type:String,default:null},color:{type:String,default:null},component:{type:String,default:null},childSKUs:[String],description:{type:String,default:null},dimensionalUnit:{type:Number,default:1},imageUrl:{type:String,default:null},inventoryArea:{type:String,default:null},graphicPosition:{type:String,default:null},priority:{type:Number,default:null},ripEnv:{type:String,default:null},stock:{type:Number,default:0},size:{type:String,default:null},type:{type:String},createdAt:{type:Date,default:null},modifiedAt:{type:Date,default:null},pretreatmentBarcode:{type:String,default:null}}),s=i.Schema(n),a=i.model("item",s);e.exports=a},8090:(e,t,o)=>{const{mongoose:i}=o(6528),r=new i.Schema({bin:{type:String,default:null},checkedOutQty:{type:Number,default:0},createdAt:{type:Date,default:null},hasBundleItem:{type:Boolean,default:!1},modifiedAt:{type:Date,default:null},orderId:{type:Number,unique:!0},printedQty:{type:Number,default:0},quantity:{type:Number,default:0},orderStatus:{type:String,default:null},serviceCode:{type:String,default:null},carrierCode:{type:String,default:null},packageCode:{type:String,default:null},tagIds:[{type:Number}],orderDate:{type:Date},workOrderStatus:{type:String,default:null},pickedQty:{type:Number,default:0}}),n=i.model("order",r);e.exports=n},7522:(e,t,o)=>{const{mongoose:i}=o(6528),r=i.Schema,n=r({count:Number,checkedOutQty:{type:Number,default:0},isActive:{type:Boolean,default:!0},isBundle:{type:Boolean,default:!1},sequence:Number,sku:String,orderId:Number,orderNumber:String,orderItemId:String,parentSKU:{type:String,default:null},printed:[{position:String,qty:{type:Number,default:0},hostname:{type:String,default:null},username:{type:String,default:null}}],pickedQty:{type:Number,default:0},quantity:Number,createdAt:{type:Date,default:null},modifiedAt:{type:Date,default:null},printedAt:{type:Date,default:null},shippedBy:{type:String,default:null},options:[]}),s=r(n),a=i.model("packingItem",s);e.exports=a},4280:(e,t,o)=>{const{Schema:i}=o(5619),{mongoose:r}=o(6528),n=new i({hostname:{type:String,default:null},ip:{type:String,default:null},machineId:{type:String,default:null},usedFor:{type:String,default:null},licenseNumber:{type:String,default:null},validityFrom:{type:Date,default:null},validityTo:{type:Date,default:null},status:{type:Boolean,default:!1},lastActivityAt:{type:Date,default:null},alias:{stype:String}}),s=r.Schema(n),a=r.model("session",s);e.exports=a},5858:(e,t,o)=>{const{mongoose:i}=o(6528),{Schema:r}=o(5619),n=new r({ssApi:{key:{type:String,default:null},secret:{type:String,default:null}},aws:{apiKey:{type:String,default:null},apiSecret:{type:String,default:null},region:{type:String,default:null},bucket:{type:String,default:null},shipLabel:{type:String,default:null},graphics:{type:String,default:null}},accountTag:{tagId:{type:Number,default:null},name:String},addFundsAmount:{type:Number,default:200},binAssignmentType:{type:String,default:"order"},orderStatus:{type:String,default:"awaiting_shipment"},testLabel:{type:Boolean,default:!1},markShipped:{type:Boolean,default:!1},company:{type:String,default:null},graphicFilePath:{type:String,default:null},tagInRush:{tagId:{type:Number,default:null},name:{type:String,default:null}},printPackingSlip:{type:Boolean,default:!1},useLocalRepository:{type:Boolean,default:!1},shipmentLabelPath:{type:String,default:null},hasGTX:{type:Boolean,default:!1},timezone:{type:String,default:"America/Los_Angeles"},usePretreatmentBarcode:{type:Boolean,default:!1},pretreatmentConfigures:{model:{type:String,default:null},defaultValue:{type:String,default:null},speedColor:[{speed:{type:Number,default:null},color:{type:String,default:null}}]},platenChangeWarning:{type:Boolean,default:!1},useQRcode:{type:Boolean,default:!1},printLabelByGraphicPositions:{type:Boolean,default:!1},useCustomPlatens:{type:Boolean,default:!1},usePlatenSymbol:{type:Boolean,default:!1},printDescriptionLabel:{type:Boolean,default:!1},autoQueue:{type:Boolean,default:!1},defaultIntegratedAutomation:{type:String,default:"KOTHARI"},defaultPrintingMethod:{type:String,default:"DTG"},useItemOptions:{type:Boolean,default:!1},itemOptionKeys:[],useWorkOrderStatus:{type:Boolean,default:!1},workOrderStatuses:[{name:{type:String,default:null},color:{type:String,default:null}}],usePrimarySKU:{type:Boolean,default:!1},primarySKUSeparator:{type:String},useProductDescription:{type:Boolean,default:!1},useInventoryModule:{type:Boolean,default:!1}}),s=i.Schema(n),a=i.model("setting",s);e.exports=a},7254:(e,t,o)=>{const i=o(2127).Router(),{getConfigVars:r,updateConfigVars:n}=o(2962);i.get("/config-vars",r),i.post("/config-vars/update",n),e.exports=i},5008:(e,t,o)=>{const i=o(2007),r=o(7522),n=o(3804),s=o(8090);t.assignBin=async e=>new Promise((async(t,o)=>{console.log("* assingBin init");try{const o=await r.aggregate([{$match:{isActive:!0}},{$lookup:{from:"items_views",localField:"sku",foreignField:"sku",as:"_item"}},{$unwind:{path:"$_item",preserveNullAndEmptyArrays:!0}}]),a=n.groupBy(o,"orderId");let c=Object.keys(a).length;console.log("- countOforderIdGroup: "+c);let l=0;for(let o in a){const r=a[o],d=(r[0].orderNumber,r.length),p=n.sumBy(r,"quantity");let u;if(await s.findOne({orderId:o}).then((e=>{n.isNil(e.bin)||n.isEmpty(e.bin)||(u=e.bin)})),u){await i.exists({binCode:u,isActive:!0})||await i.findOneAndUpdate({binCode:u},{$set:{isActive:!0,modifiedAt:new Date}})}if(n.isNil(u)&&(d>1||p>1)){let t,a,c;if("capacity"===e?(c=n.sumBy(r,(e=>{let t=1;return n.has(e,"_item")&&(n.isNil(e._item.dimensionalUnit)||(t=e._item.dimensionalUnit)),e.quantity*t})),a=await i.find({loadCapacity:{$gte:c},isActive:!1}).sort({loadCapacity:1,priority:1})):a=await i.find({isActive:!1}).sort({binCode:1}),t=Boolean(a.length)?a[0]:await i.findOne({isActive:!1}),t){const e=t&&t.binCode;await s.updateOne({orderId:o},{$set:{bin:e,modifiedAt:new Date}}).then((async()=>await i.findOneAndUpdate({binCode:e},{$set:{isActive:!0,modifiedAt:new Date}}))).then((()=>{})).catch((e=>{console.error("- bin code update on order and bin error",{message:e})}))}}l+=1,l===c&&t(!0)}}catch(e){console.error("- assign bin error",{message:e}),o(e)}}))},3169:(e,t,o)=>{const i=o(576),r=o(3804);t.createItem=(e,t,o,n)=>new Promise((async(s,a)=>{try{console.log("* createItem init");for(let c=e.length-1;c>=0;c--){const l=e[c];let d=l.sku;if(o&&r.includes(d,n)){const e=r.indexOf(d,n);d=d.substring(0,e)}if(d&&!r.isEmpty(d)){d=d.trim();let e;if(await i.exists({sku:d})){const o=await i.findOne({sku:d});Boolean(o.childSKUs.length)&&o.childSKUs.forEach((async o=>{const n=await i.findOne({sku:o});n?(r.isNil(n.description)||r.isEmpty(n.description)||r.isNil(n.imageUrl)||r.isEmpty(n.imageUrl)||r.isNil(n.type)||r.isEmpty(n.type))&&(t||(n.description=l.name),n.imageUrl=l.imageUrl,n.type="production",n.modifiedAt=new Date,await n.save().then((()=>{})).catch((e=>{console.log("- childLocalItem updated error",{message:e})}))):(e={sku:o,imageUrl:l.imageUrl,type:"production",createdAt:new Date},t||(e.description=l.name),await i.create(e).then((()=>{})).catch((e=>{console.error(`- ${o} create error`,{message:e}),a(e)})))})),(r.isNil(o.description)||r.isEmpty(o.description)||r.isNil(o.imageUrl)||r.isEmpty(o.imageUrl)||r.isNil(o.type)||r.isEmpty(o.type))&&(t||(o.description=l.name),o.imageUrl=l.imageUrl,o.type="production",o.modifiedAt=new Date,await o.save().then((()=>{})).catch((e=>{console.log("- localItem updated error",{message:e})})))}else e={sku:d,imageUrl:l.imageUrl,type:"production",createdAt:new Date},t||(e.description=l.name),await i.create(e).then((()=>{})).catch((e=>{console.error("- Item.create error \r\n",{message:e}),a(e)}))}0==c&&s(!0)}}catch(e){console.error("- createItem error",{message:e}),a(e)}}))},2305:(e,t,o)=>{const i=o(3804),r=o(8090),n=o(2007);t.createLocalOrders=(e,t="order")=>new Promise((async(o,s)=>{console.log("* start creating local orders =");try{const o=await r.find({orderStatus:"awaiting_shipment"});console.log("- localOrders length",{message:o.length});let s=0;for(let a=o.length-1;0<=a;a--){const c=o[a],{orderId:l,bin:d}=c;-1===i.findIndex(e,{orderId:l})&&await r.findOneAndUpdate({orderId:l},{$set:{orderStatus:null,modifiedAt:new Date}}).then((async()=>{"order"!==t||i.isNil(d)||await n.findOneAndUpdate({binCode:d},{$set:{isActive:!1}}),s++})).catch((e=>{console.error("- order delete error",{message:e})})),0===a&&s>0&&console.log("- done in-activated localOrders not exist in ss orders: "+s)}}catch(e){console.error("- order find all error",{message:e})}try{for(let t=e.length-1;t>=0;t--){const s=e[t],{orderId:a,orderNumber:c,orderStatus:l,carrierCode:d,serviceCode:p,packageCode:u,tagIds:g,orderDate:m}=s,h=await r.findOne({orderId:a});if(h){if(h.orderStatus!==s.orderStatus){console.log(`  ** case of orderStatus differnt from local and ss: ${h.orderStatus} : ${s.orderStatus}`);let e={orderStatus:s.orderStatus,modifiedAt:new Date};"awaiting_shipment"!==s.orderStatus&&(i.isNil(h.bin)||await n.findOneAndUpdate({binCode:h.bin},{$set:{isActive:!1,modifiedAt:new Date}})),await r.findOneAndUpdate({orderId:a},{$set:e})}}else{let e={orderId:a,orderStatus:l,carrierCode:d,serviceCode:p,packageCode:u,tagIds:g,orderDate:m,createdAt:new Date};await r.create(e).then((async e=>{})).catch((e=>{console.error("- Order create error: "+a,{message:e})}))}0===t&&o(!0)}}catch(e){console.error("- create local order loop error",{message:e}),s(e)}}))},2342:(e,t,o)=>{const i=o(3804),r=o(7522),n=o(576),s=o(8090),{generatePMTHandler:a}=o(9502),{db:c}=o(6528);t.createPackingItems=(e,t,o,l,d,p,u,g)=>(console.log("* createPackingItems init"),new Promise((async(m,h)=>{const f=await function(e){return console.log("* inActivatePackingItems init"),new Promise((async(t,o)=>{try{const o=await r.find({isActive:!0});console.log("- Count of exist packing items ",{message:o.length});let n=0,s=o.length;n<s?async function a(){const c=o[n],{orderId:l}=c;-1===i.findIndex(e,{orderId:l})&&await r.findOneAndUpdate({_id:c._id},{$set:{isActive:!1,modifiedAt:new Date,shippedBy:"admin"}}).then((()=>{})).catch((e=>{console.error("- in-activating packing item error",{message:e})})),n+=1,n<s?a():t(!0)}():t(!0)}catch(e){console.error("- inActivatePackingItems error",{message:e}),o(e)}}))}(e);console.log("- inActivatePackingItemsRes: ",{message:f});let y=0;const w=e.length;y<w&&async function f(){const b=e[y],{orderId:v,orderItemId:S,quantity:A}=b;let{sku:P}=b,x=[];if(x=b?.options,u&&i.includes(P,g)){const e=i.indexOf(P,g);P=P.substring(0,e)}if(!b.adjustment&&!i.isEmpty(P)&&!i.isNil(P)){P=P.trim();await r.exists({orderId:v,sku:P,orderItemId:S})||await c.collection("items_views").findOne({sku:P}).then((async e=>{if(e){let c=!1,u=e.childSKUs;if(u.length>0){u[0].length>0&&(c=!0)}if(c)console.log(`- ${P} is bundle parent`),await s.findOneAndUpdate({orderId:v},{hasBundleItem:!0}),e.childSKUs.forEach((async t=>{console.log("- childSKU: "+t);let o=await r.exists({orderId:v,sku:t,isBundle:!0,parentSKU:e.sku,orderItemId:S});console.log("- isChildSKU: "+o),o?console.log(`- ${v}, childSKU: ${t} exits in PackingItem`):await n.findOne({sku:t}).then((async e=>{e&&await r.create({count:b.count,sku:t,isBundle:!0,isActive:!0,sequence:b.sequence,orderId:v,orderNumber:b.orderNumber,orderItemId:S,parentSKU:b.sku,quantity:A,createdAt:new Date}).then((()=>{console.log("- bundle packing item create success: "+t)})).catch((e=>{console.error(`- bundle packing item ${t} create error:`,{message:e})}))})).catch((e=>{console.error(`- item(childSKU): ${t} find error: `,{message:e})}))}));else{let e=[];d&&Boolean(x.length)&&x.forEach((t=>{i.find(p,(e=>i.includes(t.name.toLowerCase(),e.toLowerCase())&&t))&&e.push(t)})),await r.create({count:b.count,sku:P,isActive:!0,sequence:b.sequence,orderId:v,orderNumber:b.orderNumber,orderItemId:S,quantity:A,createdAt:new Date,options:e}).then((()=>{})).catch((e=>{console.log("- creating packing item error",{message:e})}))}if(t){let t=Boolean(e?._graphics.length);if(console.log("- hasGraphics: ",{message:t}),t){let t=!1;if(e?.pretreatmentBarcode&&(i.isEmpty(e.pretreatmentBarcode)||(t=!0)),console.log("- hasPretreatmentBarcode: ",{message:t}),!t)try{const t=await a(e,o,l);if(console.log("- pmtResult: ",{message:t}),t?.pretreatmentBarcode){const{pretreatmentBarcode:o}=t;console.log("- pretreatmentBarcode: ",{message:o}),await n.updateOne({_id:e._id},{$set:{pretreatmentBarcode:o}}).then((e=>console.log("- response.nModified: ",{message:e?.nModified})))}}catch(e){e?.message&&console.error("- generatePMTHandler error(message): ",{message:e.message})}}}}})).catch((e=>{console.error(`- Item.findOne(${P}) error`,{message:e}),h({message:e})}))}y+=1,y<w?f():(console.log("- createPackingItems end: "+y),setTimeout((()=>{m(!0)}),1e3))}()})))},4851:(e,t,o)=>{const i=o(3804);t.getOrderItems=async e=>new Promise(((t,o)=>{console.log("* getOrderItems init");try{t(i.chain(e).each((async e=>{let t=1,o=i.filter(e.items,{adjustment:!1}),r=o.length;return o.map((async o=>(o.checkedOutQty=0,o.count=r,o.sequence=t,o.orderId=e.orderId,o.orderNumber=e.orderNumber,t+=1,o)))})).map((e=>e.items)).flatten().filter({adjustment:!1}).value())}catch(e){console.error("- getOrderItems error:",{message:e}),o(e)}}))},1038:(e,t,o)=>{const i=o(5858);t.getSettingQuery=()=>new Promise(((e,t)=>{i.find().limit(1).then((t=>{const o=t[0];e(o)})).catch((e=>{console.error("- getSettingQuery error",e),t(e)}))}))},2603:(e,t,o)=>{const i=o(2007),r=o(8090),n=o(3804);t.resetBinsInit=()=>new Promise((async(e,t)=>{console.log("* resetBins init");try{const o=await i.find({isActive:!0}),s=await r.find({orderStatus:"awaiting_shipment",bin:{$exists:!0,$ne:null}});if(o.length!==s.length){try{await function(e,t){return new Promise((async(o,r)=>{try{console.log("* resetBinByActiveBins init");let r=0,a=e.length;if(0===a)return void o({message:"reset by active bins done"});async function s(){const c=e[r];-1===n.findIndex(t,{bin:c.binCode})&&await i.updateOne({_id:c._id},{$set:{isActive:!1,modifiedAt:new Date}}),r+=1,r<a?s():o({message:"reset by active bins done"})}r<a&&s()}catch(e){console.error("- reset by active bins error",{message:e}),r(e)}}))}(o,s)}catch(e){console.error("- resetBinByActiveBins error",{message:e})}try{await function(e,t){return new Promise((async(o,r)=>{try{console.log("* resetBinByOrderBins init");let r=0,a=e.length;if(0===a)return void o({message:"reset by order bins done"});async function s(){const c=e[r];-1===n.findIndex(t,{binCode:c.bin})&&await i.updateOne({binCode:c.bin},{$set:{isActive:!0,modifiedAt:new Date}}),r+=1,r<a?s():o(!0)}r<a&&s()}catch(e){console.error("- reset by order bins error",{message:e}),r(e)}}))}(s,o)}catch(e){return console.error("- resetBinByOrderBins error",{message:e}),void t(e)}e({message:"Reset bin done"})}else e({message:"Reset bin done"})}catch(e){t(e)}}))},6230:(e,t,o)=>{const i=o(3804),{getSettingQuery:r}=o(1038),n=o(2376);function s(e){return new Promise((async(t,o)=>{try{const{ssApi:o,accountTag:s,orderStatus:a}=await r(),c=i.has(s,"tagId")?"/orders/listbytag":"/orders";let l={orderStatus:a,sortBy:"orderDate",sortDir:"DESC",page:e};s.tagId&&(l.tagId=s.tagId);t((await n.get(c,{params:l,auth:{username:o.key,password:o.secret}})).data)}catch(e){o(e)}}))}n.defaults.baseURL=process.env.SS_API_ENDPOINT,t.getAllShipstationOrders=()=>new Promise((async(e,t)=>{try{let o=[];s(1).then((async r=>{o.push(r);let n=r.pages;const a=Array.from(Array(n).keys()).map((e=>{let t=e+1;return t>1&&s(t)}));let c=[];try{c=await Promise.all(a),c.forEach((e=>e&&o.push(e)));let t=i.chain(o).map((e=>e.orders)).flatten().value();e(t)}catch(e){console.error("getShipstationOrders Promise.all err",{message:e}),t(e)}})).catch((e=>{console.error("getShipstationOrders err",{message:e}),t(e)}))}catch(e){console.error("getShipstationOrders error",{message:e}),t(e)}}))},8041:(e,t,o)=>{const{getAllShipstationOrders:i}=o(6230),{createLocalOrders:r}=o(2305),{getOrderItems:n}=o(4851),{createItem:s}=o(3169),{createPackingItems:a}=o(2342),{assignBin:c}=o(5008),{updateOrderQty:l}=o(2398),{getSettingQuery:d}=o(1038),{resetBinsInit:p}=o(2603);e.exports=()=>new Promise((async(e,t)=>{let o,u,g,m,h,f,y;console.log("> started syncOrdersPromises"),await p().then((e=>{console.log("- resetBinsInit res",{message:e})})).catch((e=>{console.error("- resetBinsInit error",{message:e}),t({message:e})}));const w=await d();o=w?.binAssignmentType,u=w?.company,console.log("- company: ",{message:u}),g=w.usePretreatmentBarcode,m=w?.aws,h=w?.pretreatmentConfigures,f=w?.useItemOptions,y=w?.itemOptionKeys,useProductDescription=w?.useProductDescription,usePrimarySKU=w?.usePrimarySKU,console.log("- usePrimarySKU: ",{message:usePrimarySKU}),primarySKUSeparator=w?.primarySKUSeparator,console.log("- primarySKUSeparator: ",{message:primarySKUSeparator});const{speedColor:b}=h;let v,S;try{v=await i(),console.log("- ssOrders: "+v.length)}catch(e){console.error("- getAllShipstationOrders error:",{message:e}),t({message:e})}if(Boolean(v.length))try{const i=await r(v,o);if(console.log("- createLocalOrdersRes: "+i),i)try{if(S=await n(v),console.log("- orderItems length "+S.length),Boolean(S.length))try{const i=await s(S,useProductDescription,usePrimarySKU,primarySKUSeparator);if(console.log("- createItemRes: "+i),i)try{const i=await a(S,g,b,m,f,y,usePrimarySKU,primarySKUSeparator);console.log("- createPackingItemsRes: "+i);try{const i=await c(o);if(console.log("- assignBinRes "+i),i)try{const t=await l();console.log("- updateOrderQtyRes: "+t),e({message:"Done sync orders"})}catch(e){console.error("- updateOrderQty error",{message:e}),t({message:e})}}catch(e){console.error("- assignBin error",{message:e}),t({message:e})}}catch(e){console.error("- createPackingItems error: ",{message:e}),t({message:e})}}catch(e){console.error("- createItem error: ",{message:e}),t({message:e})}}catch(e){console.error("- orderItems error: ",{message:e}),t({message:e})}}catch(e){return console.error("- createLocalOrdersRes error:",{message:e}),void t({message:e})}else t({message:"Shipstation orders not found"})}))},2398:(e,t,o)=>{const i=o(7522),r=o(3804),n=o(8090);t.updateOrderQty=async()=>new Promise((async(e,t)=>{console.log("* updateOrderQty init");try{const t=await i.find({isActive:!0}),o=r.groupBy(t,"orderId");let s=Object.keys(o).length,a=0;for(let t in o){const i=o[t],c=r.sumBy(i,"quantity");await n.findOne({orderId:t}).then((async e=>{e?.quantity!==c&&await n.updateOne({orderId:t},{$set:{quantity:c,modifiedAt:new Date}}).then((async()=>{})).catch((e=>{console.error("- updateOrderQty on order error",{message:e})}))})),a+=1,a===s&&e(!0)}}catch(e){console.error("- updateOrderQty error",{message:e}),t(e)}}))},3026:(e,t,o)=>{const i=o(5622),r=o(4298),{spawn:n,exec:s}=o(3129),a=o(7211),c=o(2927),l=o(2772);let d={},p=!0;const u="/AutoGitUpdate/repo/";function g(e,t){return new Promise((function(o,i){let r=a.request(e,t,(e=>{let t="";e.on("data",(e=>{t+=e})),e.on("end",(function(){if("200"==e.statusCode)return o(t);console.log("Auto Git Update - Bad Response "+e.statusCode),i(e.statusCode)}))}));console.log("Auto Git Update - Sending request to "+e),console.log("Auto Git Update - Options: "+JSON.stringify(t)),r.on("error",i),r.end()}))}async function m(e){return new Promise((function(t,o){setTimeout(t,e)}))}e.exports=class{constructor(e){if(null==e)throw new Error("You must pass a config object to AutoGitUpdate.");if(null==e.repository)throw new Error("You must include a repository link.");if(null==e.branch&&(e.branch="master"),null==e.tempLocation)throw new Error("You must define a temp location for cloning the repository");d=e,d.fromReleases&&(p=!1,async function(e){let t={headers:{"User-Agent":"Auto-Update - "+e}};d.token&&(t.headers.Authorization="token "+d.token);if(!(e=e.toLocaleLowerCase().replace("github.com/","api.github.com/repos/")).includes("github"))throw new Error("fromReleases is enabled but this does not seem to be a GitHub repo.");e.endsWith("/")&&(e=e.slice(0,-1));const o=e+"/releases/latest";console.log("Auto Git Update - Checking release tag from "+o);try{let e=await g(o,t),i=JSON.parse(e).tag_name;d.branch=i,p=!0}catch(e){if(e=404)throw new Error("This repository requires a token or does not exist. \n "+o);throw e}}(d.repository))}async autoUpdate(){for(;!p;)await m(1e3),console.log("Auto Git Update - Not ready to update...");return!!(await this.compareVersions()).upToDate||await this.forceUpdate()}async compareVersions(){try{console.log("Auto Git Update - Comparing versions...");let e=function(){let e=i.join(c.path,"package.json");console.log("Auto Git Update - Reading app version from "+e);let t=r.readFileSync(e);return JSON.parse(t).version}(),t=await async function(){let e={},t=d.repository+`/${d.branch}/package.json`;t.includes("github")&&(t=t.replace("github.com","raw.githubusercontent.com"));d.token&&(e.headers={Authorization:"token "+d.token});console.log("Auto Git Update - Reading remote version from "+t);try{let o=await g(t,e);return JSON.parse(o).version}catch(e){if(e=404)throw new Error("This repository requires a token or does not exist. \n "+t);throw e}}();return console.log("Auto Git Update - Current version: "+e),console.log("Auto Git Update - Remote Version: "+t),e==t?{upToDate:!0,currentVersion:e}:{upToDate:!1,currentVersion:e,remoteVersion:t}}catch(e){return console.error("Auto Git Update - Error comparing local and remote versions."),console.error(e),{upToDate:!1,currentVersion:"Error",remoteVersion:"Error"}}}async forceUpdate(){try{return console.log("Auto Git Update - forceUpdate application from "+d.repository),await async function(){let e=d.repository;d.token&&(e=e.replace("http://","").replace("https://",""),e=`https://${d.token}@${e}`);let t=i.join(d.tempLocation,u);return console.log("Auto Git Update - Cloning "+e),console.log("Auto Git Update - Destination: "+t),await r.ensureDir(t),await r.emptyDir(t),await function(e,t,o){return new Promise((function(i,r){l().clone(e,t,["--branch="+o],(t=>{null!=t&&r(`Unable to clone repo \n ${e} \n ${t}`),i()}))}))}(e,t,d.branch),!0}(),await async function(){d.ignoreFiles&&(console.log("Auto Git Update - Purging ignored files from the update"),d.ignoreFiles.forEach((e=>{e=i.join(d.tempLocation,u,e),console.log("Auto Git Update - Removing "+e),r.unlinkSync(e)})));let e=i.join(d.tempLocation,u),t=c.path;return console.log("Auto Git Update - Installing update..."),console.log("Auto Git Update - Source: "+e),console.log("Auto Git Update - Destination: "+t),await r.ensureDir(t),await r.copy(e,t),!0}(),await new Promise((function(e,t){let o=c.path;console.log("Auto Git Update - Installing application dependencies in "+o);let i=s(`cd ${o} && npm install`);i.stdout.on("end",e),i.stdout.on("data",(e=>console.log("Auto Git Update - npm install: "+e.replace(/\r?\n|\r/g,"")))),i.stderr.on("data",(e=>{e.toLowerCase().includes("error")?(e=e.replace(/\r?\n|\r/g,""),console.error("Auto Git Update - Error installing dependencies"),console.error("Auto Git Update - "+e),t()):console.error("Auto Git Update - "+e)}))})),console.log("Auto Git Update - Finished installing updated version."),d.exitOnComplete&&process.exit(1),d.executeOnComplete&&await(e=d.executeOnComplete,new Promise((function(t,o){n(e,[],{shell:!0,detached:!0}),setTimeout(t,1e3)}))),!0}catch(e){return console.error("Auto Git Update - Error updating application"),console.error(e),!1}var e}}},3624:(e,t,o)=>{const i=o(5622),r=o(3216),n=o(5747).promises,{networkInterfaces:s,hostname:a}=o(2087),{readdir:c,unlink:l}=o(5747).promises,d=o(3804),p=o(4280),{serializeError:u}=o(477),{exec:g}=o(3129),{promisify:m}=o(1669),h=(m(g),o(1616)),{getSettingQuery:f}=o(1038),y=o(7522),w=o(8090);o(1815);t.saveBuffer=(e,t)=>new Promise((async(o,i)=>{try{await n.writeFile(t,e,"binary"),o(t)}catch(e){console.log(u(e)),console.error("- saveBuffer error",{message:u(e)}),i(u(e))}})),t.saveXML=(e,t)=>new Promise((async(o,i)=>{try{await n.writeFile(t,e,"utf8"),o({status:"success",filePath:t})}catch(e){return void i(u(e))}})),t.removeFile=e=>new Promise((async(t,o)=>{try{await n.unlink(e),console.log(`- ${e} was removed.`),t(!0)}catch(e){console.error("fs.unlink error",{message:u(e)}),o(u(e))}})),t.randomString=()=>Math.random().toString(36).substring(7),t.s3GetObject=async({bucket:e,key:t,aws:o})=>{if(console.log("* s3GetObject init"),!o){o=(await f()).aws}const i=new r({region:o.region,signatureVersion:"v4",credentials:{accessKeyId:o.apiKey,secretAccessKey:o.apiSecret}});return new Promise(((o,r)=>{i.getObject({Bucket:e,Key:t},((e,t)=>{if(e)return console.error("- s3GetObject Error",{message:e}),void r(u(e));const{Body:i}=t;o(i)}))}))},t.s3HeadObject=async(e="unifiedmfg",t,o)=>{if(console.log("* s3HeadObject init"),!o){o=(await f()).aws}const i=new r({region:o.region,signatureVersion:"v4",credentials:{accessKeyId:o.apiKey,secretAccessKey:o.apiSecret}});return new Promise(((o,r)=>{i.headObject({Bucket:e,Key:t},((e,t)=>{e?r(u(e)):o(!0)}))}))},t.s3Upload=async({bucket:e="unifiedmfg",key:t,filePath:o,aws:i})=>{if(console.log("* s3Upload init"),!i){i=(await f()).aws}const s=new r({region:i.region,signatureVersion:"v4",credentials:{accessKeyId:i.apiKey,secretAccessKey:i.apiSecret}});return new Promise((async(i,r)=>{const{GTX_CMD_PATH:a}=process.env;let c;try{c=await n.readFile(o)}catch(e){return console.error("- fs.readFile error: ",{message:e}),void r(u(e))}s.upload({Bucket:e,Key:t,Body:c},((e,t)=>{e?r(u(e)):i(t)}))}))},t.getFilesUnlink=async e=>{console.log("* getFilesUnlink init");let t=e?.sku,o=e?.filePath;const r=await c(o,{withFileTypes:!0});for(let e=r.length-1;e>=0;e--){const n=r[e];let s=i.resolve(o,n.name);if(t?d.includes(s,t)&&await l(""+s,(e=>{if(e)return console.error("-unlink err: ",{message:e}),"Failed cancel queue"})):await l(""+s,(e=>{if(e)return console.error("-unlink err: ",{message:e}),"Failed cancel queue"})),0==e)return"Canceled queue"}},t.updateSession=async()=>{console.log("* updateSession init");const e=a();console.log("- host",{message:e});const{address:t,mac:o}=b(),i=o;console.log("- getLocalIP address, mac: ",{message:t,mac:o}),console.log("- machineId",{message:i});let r={hostname:e,ip:t,machineId:i,lastActivityAt:new Date};await p.updateOne({hostname:e},r,{upsert:!0}).then((e=>console.log("- session updated(n) by hostname: "+e.n))).catch((e=>console.error("- session updated by hostname error",{message:e})))};const b=()=>{const e=s();let t=[];for(const o of Object.keys(e))if(/^Ethernet/.test(o)||/^Wi-Fi/.test(o))for(const i of e[o])"IPv4"!==i.family||i.internal||t.push(i);return Boolean(t.length)?t[0]:{address:"",mac:""}};t.getGraphicDimensions=e=>(console.log("* getGraphicDimensions init"),new Promise((async(t,o)=>{try{t(await h(e))}catch(e){o(u(e))}}))),t.updatePackingItemPrinted=({condition:e,update:t})=>(console.log("* updatePackingItemPrinted init"),new Promise((async(o,i)=>{const r=t.$set["printed.$.hostname"],n=t.$set["printed.$.username"],s=t.$set.printedAt;let a,c,l;l=await y.exists(e)?await y.findOneAndUpdate(e,t,{new:!0}):await y.findOneAndUpdate({_id:e._id},{$set:{printedAt:s},$push:{printed:{position:e["printed.position"],qty:1,hostname:r,username:n}}},{new:!0}),l&&(a=l?.orderId,c=l?.printed),a&&await v({query:{orderId:a}}).then((async e=>{const t=d.sumBy(e,(e=>d.sumBy(e?.printed,"qty")));await S({condition:{orderId:a},update:{$set:{printedQty:t,modifiedAt:new Date}}})})),o(c)})));const v=async({query:e})=>(console.log("* getPackingItemsByOrder init"),new Promise(((t,o)=>{let i={quantity:{$gt:0}};const r=e?.orderId??e.orderId,n=e?.isActive??e.isActive,s=e?.sku??e.sku,a=e?.orderNumber??e.orderNumber;r&&(i.orderId=parseInt(r)),n&&(i.isActive="true"===n),s&&(i.sku=s),a&&(i.orderNumber=a),y.aggregate([{$match:i},{$lookup:{from:"items_views",localField:"sku",foreignField:"sku",as:"_item"}},{$unwind:{path:"$_item",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"orders",localField:"orderId",foreignField:"orderId",as:"_order"}},{$unwind:{path:"$_order",preserveNullAndEmptyArrays:!0}}]).then((e=>{t(e)})).catch((e=>{console.error("- getPackingItemsByOrder error: ",{message:u(e)}),o(u(e))}))}))),S=async({condition:e,update:t})=>(console.log("* updateOrder init"),new Promise(((o,i)=>{w.findOneAndUpdate(e,t,{new:!0}).then((e=>{o(e)})).catch((e=>{console.error("- updateOrder error: ",{message:u(e)}),i(u(e))}))})))},1815:(e,t,o)=>{const{createLogger:i,transports:r,format:n}=o(944),{timestamp:s,combine:a,label:c,printf:l}=n,d=i({level:"info",format:a(s({format:()=>(new Date).toLocaleString("en-US",{timeZone:"America/Los_Angeles"})}),l((e=>`${e.timestamp} [${e.level}] ${e.message}`))),transports:[new r.Console,new r.File({filename:"./logs/logger.log"})]});e.exports=d},5439:e=>{"use strict";e.exports=require("@serialport/parser-readline")},2927:e=>{"use strict";e.exports=require("app-root-path")},3216:e=>{"use strict";e.exports=require("aws-sdk/clients/s3")},2376:e=>{"use strict";e.exports=require("axios")},3129:e=>{"use strict";e.exports=require("child_process")},2318:e=>{"use strict";e.exports=require("console-stamp")},479:e=>{"use strict";e.exports=require("cors")},6369:e=>{"use strict";e.exports=require("custom-env")},1877:e=>{"use strict";e.exports=require("envfile")},2127:e=>{"use strict";e.exports=require("express")},5747:e=>{"use strict";e.exports=require("fs")},4298:e=>{"use strict";e.exports=require("fs-extra")},8605:e=>{"use strict";e.exports=require("http")},7211:e=>{"use strict";e.exports=require("https")},1616:e=>{"use strict";e.exports=require("image-size")},3804:e=>{"use strict";e.exports=require("lodash")},2470:e=>{"use strict";e.exports=require("moment")},5619:e=>{"use strict";e.exports=require("mongoose")},4226:e=>{"use strict";e.exports=require("node-watch")},2087:e=>{"use strict";e.exports=require("os")},5622:e=>{"use strict";e.exports=require("path")},6790:e=>{"use strict";e.exports=require("printer")},477:e=>{"use strict";e.exports=require("serialize-error")},1117:e=>{"use strict";e.exports=require("serialport")},2772:e=>{"use strict";e.exports=require("simple-git")},2395:e=>{"use strict";e.exports=require("socket.io")},1669:e=>{"use strict";e.exports=require("util")},944:e=>{"use strict";e.exports=require("winston")},2589:e=>{"use strict";e.exports=require("xml2js")},4687:e=>{"use strict";e.exports=JSON.parse('[{"code":0,"description":"Successful termination"},{"code":-1,"description":"An error occurred in the GTX-4 Printer Driver."},{"code":-999,"description":"An error occurred in the GTX-4 Printer Driver."},{"code":-1001,"description":"Driver file not found."},{"code":-1101,"description":"A folder with the same name as the file name specified with <szFileName> exists in the same folder as GTX4CMD.exe."},{"code":-1102,"description":"The value specified with <uiCopies> is outside the range of 1 to 999."},{"code":-1103,"description":"The value specified with <byMachineMode> is outside the range."},{"code":-1105,"description":"The value specified with <byPlatenSize> is outside the range of 0 to 4."},{"code":-1106,"description":"The value specified with <byInk> is outside the range of 0 to 2."},{"code":-1107,"description":"The value specified with <byResolution> is outside the range."},{"code":-1108,"description":"The value specified with <byHighlight> is outside the range of 1 to 9."},{"code":-1109,"description":"The value specified with <byMask> is outside the range of 1 to 5."},{"code":-1110,"description":"The value specified with <byInkVolume> is outside the range of 1 to 10."},{"code":-1111,"description":"The value specified with < byDoublePrint > is outside the range of 1 to 10."},{"code":-1116,"description":"The value specified with <byTolerance> is outside the range of 0 to 50."},{"code":-1117,"description":"The value specified with <byMinWhite> is outside the range of 1 to 6."},{"code":-1118,"description":"The value specified with <byChoke> is outside the range of 0 to 10."},{"code":-1120,"description":"The value specified with <bySaturation> is outside the range of 0 to 40."},{"code":-1121,"description":"The value specified with <byBrightness> is outside the range of 0 to 40."},{"code":-1122,"description":"The value specified with <byContrast> is outside the range of 0 to 40."},{"code":-1123,"description":"<iCyanBalance> is outside the range of -5 to 5."},{"code":-1124,"description":"<iMagentaBalance> is outside the range of -5 to 5."},{"code":-1125,"description":"<iYellowBalance> is outside the range of -5 to 5."},{"code":-1133,"description":"<iBlackBalance> is outside the range of -5 to 5."},{"code":-1135,"description":"<byPauseSpan> is outside the range of 0 to 60."},{"code":-1137,"description":"<byDivideSpan> is outside the range of 0 to 60."},{"code":-1401,"description":"Driver file not found."},{"code":-1402,"description":"Failed to allocate memory."},{"code":-1403,"description":"The printer specified with the -P argument is not found or the printer driver is not available."},{"code":-1404,"description":"Failed to start printing with the printer driver."},{"code":-1405,"description":"Failed to start printing with the printer driver."},{"code":-1406,"description":"Failed to create the work file."},{"code":-1701,"description":"Driver file not found."},{"code":-1702,"description":"An error occurred in executing GTX4Api."},{"code":-1704,"description":"An error occurred in executing GTX4Api."},{"code":-1705,"description":"Failed to allocate memory."},{"code":-1706,"description":"Failed to acquire the device context."},{"code":-1707,"description":"Failed to acquire the image data."},{"code":-1901,"description":"An error occurred in executing GTX4Api."},{"code":-1902,"description":"Failed to acquire the device context."},{"code":-1903,"description":"Failed to acquire the device context."},{"code":-1904,"description":"Failed to draw in the image area."},{"code":-2001,"description":"The image file is not a PNG file and cannot be loaded."},{"code":-2002,"description":"Failed to load the image file."},{"code":-2003,"description":"Failed to separate the transparent layer from the color image."},{"code":-2004,"description":"Failed to convert an RGB=(255,255,255) to white."},{"code":-2201,"description":"Failed to analyze the ARX4 data."},{"code":-2202,"description":"Failed to create the image data."},{"code":-2203,"description":"Failed to create the image data."},{"code":-2501,"description":"Failed to connect to the printer."},{"code":-2502,"description":"The file specified with the -L argument cannot be created."},{"code":-2503,"description":"Failed to obtain the log from the printer."},{"code":-2601,"description":"Failed to access to the log file."},{"code":-2602,"description":"Failed to open the log file."},{"code":-2603,"description":"Failed to save the print history CSV file."},{"code":-2604,"description":"Failed to save the operation history CSV file."},{"code":-2605,"description":"Failed to save the maintenance history CSV file."},{"code":-2701,"description":"Failed to connect to the printer."},{"code":-2702,"description":"Failed to obtain the status from the printer."},{"code":-2703,"description":"Failed to obtain the status from the printer."},{"code":-2704,"description":"The CSV file specified with the -S argument cannot be created."},{"code":-2705,"description":"The CSV file specified with the -O argument cannot be created."},{"code":-2706,"description":"The CSV file specified with the -M argument cannot be created."},{"code":-2801,"description":"The ARX4 file specified with the -I argument cannot be opened."},{"code":-2802,"description":"The ARX4 file specified with the -A argument cannot be opened."},{"code":-2803,"description":"The ARX4 file specified with the -O argument cannot be created."},{"code":-2804,"description":"Failed to load the ARX4 file specified with the -I argument."},{"code":-2805,"description":"Failed to load the ARX4 file specified with the -Aargument."},{"code":-2806,"description":"The ARX4 file specified with the -I argument is not supported."},{"code":-2807,"description":"The ARX4 file specified with the -A argument is not supported."},{"code":-2808,"description":"An attempt was made to combine more than ten ARX4 files."},{"code":-2809,"description":"The two ARX4 files are different in platen size and therefore cannot be combined."},{"code":-2901,"description":"The ARX4 file specified with the -I argument cannot be opened."},{"code":-2902,"description":"The ARX4 file specified with the -W argument cannot be created."},{"code":-2903,"description":"The ARX4 file specified with the -C argument cannot be created."},{"code":-2904,"description":"Failed to load the ARX4 file specified with the -I argument."},{"code":-2905,"description":"The ARX4 file specified with the -I argument cannot be supported."},{"code":-3001,"description":"A value without an option cannot be specified for this argument."},{"code":-3002,"description":"An option without a value cannot be specified for this argument."},{"code":-3003,"description":"An option with a value cannot be specified for this argument."},{"code":-3101,"description":"The specified option is not supported."},{"code":-3102,"description":"The file specified with the -X argument is not found."},{"code":-3103,"description":"The file specified with the -I argument is not found."},{"code":-3104,"description":"The -P and -A arguments cannot be specified at the same time and either argument must be specified."},{"code":-3105,"description":"No value is specified for the -P argument."},{"code":-3106,"description":"The file specified with the -A argument cannot be created."},{"code":-3107,"description":"The value specified with the -L argument is invalid."},{"code":-3108,"description":"The -S and -R arguments cannot be specified at the same time and either argument must be specified."},{"code":-3109,"description":"The value specified with the -S argument is invalid."},{"code":-3110,"description":"The value specified with the -R argument is invalid."},{"code":-3111,"description":"The value specified with the -W argument is invalid."},{"code":-3112,"description":"A non-numeric value was specified for the argument -D option."},{"code":-3113,"description":"The file specified by the argument -AW option cannot be created."},{"code":-3114,"description":"The file specified by the argument -AC option cannot be created."},{"code":-3201,"description":"Cannot load the file specified with the -X argument."},{"code":-3202,"description":"Cannot load the image file with the magnification factor specified with the -R argument"},{"code":-3501,"description":"The option specified cannot be used with extract."},{"code":-3502,"description":"No value is specified for the -A argument."},{"code":-3503,"description":"Neither the -X nor -I argument is specified."},{"code":-3504,"description":"The value specified with the –X argument is invalid."},{"code":-3505,"description":"The value specified with the –I argument is invalid."},{"code":-3506,"description":"The -I argument is specified and the value of the -S argument is not 8-digit."},{"code":-3601,"description":"The file specified with the -X argument cannot be created."},{"code":-3602,"description":"The file specified with the -X argument cannot be created."},{"code":-3603,"description":"The image file specified with the -I argument cannot be created."},{"code":-3901,"description":"Specified parameter is not supported by the argument."},{"code":-3902,"description":"The printer specified with the argument -P is not found."},{"code":-3903,"description":"The file name specified with the -L argument parameter is invalid."},{"code":-4101,"description":"Specified parameter is not supported by the argument."},{"code":-4102,"description":"The log file specified with the -L argument parameter is not found."},{"code":-4103,"description":"None of the -P, -O, and -M arguments are specified."},{"code":-4104,"description":"The file name specified with the -P argument parameter is invalid."},{"code":-4105,"description":"The file name specified with the -O argument parameter is invalid."},{"code":-4106,"description":"The file name specified with the -M argument parameter is invalid."},{"code":-4107,"description":"The value specified with the -S argument parameter is not a date."},{"code":-4108,"description":"The value specified with the -E argument parameter is not a date."},{"code":-4201,"description":"Specified parameter is not supported by the argument."},{"code":-4202,"description":"The ARX4 file specified with the -I argument is not found."},{"code":-4203,"description":"The ARX4 file specified with the -A argument is not found."},{"code":-4204,"description":"The value specified with the -O argument is invalid."},{"code":-4205,"description":"The value specified with the -W argument is invalid."},{"code":-4301,"description":"Specified parameter is not supported by the argument."},{"code":-4302,"description":"The printer specified with the argument -P is not found."},{"code":-4303,"description":"None of the -S, -O, and -M arguments are specified."},{"code":-4304,"description":"The file name specified with the -S argument parameter is invalid."},{"code":-4305,"description":"The file name specified with the -O argument parameter is invalid."},{"code":-4306,"description":"The file name specified with the -M argument parameter is invalid."},{"code":-4401,"description":"Specified parameter is not supported by the argument."},{"code":-4402,"description":"The ARX4 file specified with the -I argument is not found."},{"code":-4403,"description":"The value specified with the -W argument is invalid."},{"code":-4404,"description":"The value specified with the -C argument is invalid."}]')}},t={};function o(i){var r=t[i];if(void 0!==r)return r.exports;var n=t[i]={exports:{}};return e[i](n,n.exports,o),n.exports}!function(){o(6369).env(!0),o(2318)(console,{format:":date(isoDateTime) :label"});const e=o(2127),t=e(),i=o(8605).createServer(t),r=o(479),n=o(2395)(i,{cors:{origins:["http://localhost:3000","http://localhost:3022","http://localhost:5000","https://*.printflo.io"]}}),s=o(1117),a=process.env.PORT||4002,c=o(5439),l=o(2087),d=o(5622),{getFilesUnlink:p,updateSession:u,getGraphicDimensions:g}=o(3624),{printDirect:m}=o(7798),h=o(3804),{serializeError:f}=o(477),{getGTXPreset:y}=o(5782),{watchDone:w}=o(3046),{shippingLabelPrint:b}=o(8166),{queueKothari:v}=o(9510),{queueGTX:S}=o(3765),A=o(8041),P=o(7254),{execAppController:x}=o(3157),{getSettingQuery:$}=o(1038),{exportItems:T}=o(8755),{main:k}=o(9502),{exportGraphics:I}=o(2633);let{APP_ENV:O,COM_PORT:B,THERMAL_PRINTER:U,WATCH_DONE:q,HOT_PATH:N}=process.env;t.use(r()),t.use(e.urlencoded({extended:!0})),t.use(e.json());let D="PRODUCTION"===O?"public":"client/build";t.use(e.static(d.join(__dirname,D))),t.use("/api",P),t.get("/*",((e,t)=>{t.sendFile(d.join(__dirname,"./"+D,"index.html"))}));const C=new s(B,{baudRate:9600,databits:8,parity:"none",stopBits:1}).pipe(new c({delimiter:"\r\n"})),F=l.hostname();C.on("data",(async e=>{const t=e.toString("utf8");console.log("++ read barcode: ",{message:t}),n.emit("on-packing-scanned",t),n.emit("on-barcode-scanned",t)})),n.on("connection",(e=>{e.on("on-sku-print",(e=>{console.log("* init on-sku-print"),m(e,U,"RAW",(e=>{console.log("* printDirect cb",{message:e}),h.has(e,"name")&&"Error"===e.name&&n.emit("on-sku-print-result",e)}))})),e.on("on-shipping-label-print",(async(e,t)=>{console.log("* on-shipping-label-print init"),b(n,e,t)})),e.on("on-queue-kothari",(async(e,t,o,i=1,r)=>{console.log("* on-queue-kothari init"),v(n,e,t,o,i,r)})),e.on("on-cancel-queue",(async e=>{console.log("* on-cancel-queue init");let t=N||"C:/Users/Public/hot";console.log("-sku:",{message:e}),console.log("-filePath:",{message:t});const o=await p({sku:e,filePath:t});console.log("-getFilesUnlink result",{message:o}),o?n.emit("on-cancel-queue-result",o):n.emit("on-cancel-queue-result","Failed cancel queue")})),e.on("on-gtx-preset",(async e=>{console.log("* on-gtx-preset init");let t=await y(e);n.emit("on-gtx-preset-result",t)})),e.on("on-queue-gtx",(({print_size:e,profile:t,selectedPosition:o,updatePrinted:i})=>{S(n,e,t,o,i)})),e.on("on-sync-order",(async()=>{console.log("** on-sync-order init"),A().then((e=>{console.log("on-sync-order result",{message:e}),n.emit("on-sync-order-result",e)})).catch((e=>{console.error("on-sync-order error",{message:e}),n.emit("on-sync-order-result",f(e))}))})),e.on("on-get-graphic-dimensions",(async e=>{console.log("** on-get-graphic-dimensions init: *only called useLocalRepository true");let t=`${(await $())?.graphicFilePath||"c:\\users\\public\\graphics"}/${e}`;try{let e=await g(t);console.log("getGraphicDimensions result",{message:e}),n.emit("on-get-graphic-dimensions-result",e)}catch(e){console.log("getGraphicDimensions error",{error:e}),n.emit("on-get-graphic-dimensions-result",e)}})),e.on("on-app-controller",(async e=>{let t;console.info("** on-app-controller init");try{let o=await x(e);console.log("execAppController response",o),t=o.message?o.message:o.stdout?o.stdout:null}catch(e){console.error("execAppController error: ",e),t=e.message?e.message:e.stdout?e.stdout:null}console.log("msg: ",t),n.emit("on-app-contrller-result",t,e)})),e.on("on-get-hostname",(()=>{console.log("** on-get-hostname init"),n.emit("on-get-hostname-result",F)})),e.on("on-export-items",(async()=>{console.log("** on-on-export-items init");try{const{result:e,filePath:t}=await T();console.log("- result: ",{message:e}),console.log("- filePath: ",{message:t}),n.emit("on-export-items-result",{result:e,filePath:t})}catch(e){n.emit("on-export-items-result",{error:e})}})),e.on("on-export-graphics",(async()=>{console.log("** on-on-export-graphics init");try{const{result:e,filePath:t}=await I();console.log("- result: ",{message:e}),console.log("- filePath: ",{message:t}),n.emit("on-export-graphics-result",{result:e,filePath:t})}catch(e){n.emit("on-export-graphics-result",{error:e})}})),e.on("on-generate-pmt",(async()=>{console.log("** on-generate-pmt init");try{const{result:e}=await k();console.log("- result: ",{message:e}),e&&n.emit("on-generate-pmt-result",e)}catch(e){n.emit("on-generate-pmt-result",e)}})),e.on("disconnect",(()=>{}))})),/^true$/.test(q)&&w(n),i.listen(a,(async()=>{console.log(`>> Server listening at port ${a}: ${O}`),await u()})),"PRODUCTION"===process.env.APP_ENV&&new(o(3026))({repository:"https://github.com/manemico/printflo-link-build",tempLocation:"utilities/temp",executeOnComplete:"pm2_restart.bat"}).autoUpdate()}()})();
//# sourceMappingURL=index.js.map